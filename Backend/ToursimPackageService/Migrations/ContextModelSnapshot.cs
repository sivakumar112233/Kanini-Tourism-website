// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToursimPackageService.Models;

#nullable disable

namespace ToursimPackageService.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToursimPackageService.Model.TotalDaysDescription", b =>
                {
                    b.Property<int>("TotalDaysDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TotalDaysDescriptionId"));

                    b.Property<string>("DayDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InclusionId")
                        .HasColumnType("int");

                    b.Property<string>("TourSpotName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TotalDaysDescriptionId");

                    b.HasIndex("InclusionId");

                    b.ToTable("TotalDaysDescriptions");
                });

            modelBuilder.Entity("ToursimPackageService.Models.Inclusion", b =>
                {
                    b.Property<int>("InclusionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InclusionId"));

                    b.Property<string>("Accommodation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int>("TotalNights")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<string>("Transfer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InclusionId");

                    b.ToTable("Inclusion");
                });

            modelBuilder.Entity("ToursimPackageService.Models.Tours", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourId"));

                    b.Property<int>("InclusionId")
                        .HasColumnType("int");

                    b.Property<int>("MaxCount")
                        .HasColumnType("int");

                    b.Property<string>("TourLocationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourLocationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourLocationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("TourPrice")
                        .HasColumnType("real");

                    b.Property<string>("TourSpecialty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TravelAgentId")
                        .HasColumnType("int");

                    b.HasKey("TourId");

                    b.HasIndex("InclusionId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("ToursimPackageService.Model.TotalDaysDescription", b =>
                {
                    b.HasOne("ToursimPackageService.Models.Inclusion", "Inclusion")
                        .WithMany("TotalDaysDescriptions")
                        .HasForeignKey("InclusionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inclusion");
                });

            modelBuilder.Entity("ToursimPackageService.Models.Tours", b =>
                {
                    b.HasOne("ToursimPackageService.Models.Inclusion", "Inclusion")
                        .WithMany()
                        .HasForeignKey("InclusionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inclusion");
                });

            modelBuilder.Entity("ToursimPackageService.Models.Inclusion", b =>
                {
                    b.Navigation("TotalDaysDescriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
